/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { QuestionUpdateManyWithoutTestsInput } from "./QuestionUpdateManyWithoutTestsInput";
import { Type } from "class-transformer";
import { ScoreUpdateManyWithoutTestsInput } from "./ScoreUpdateManyWithoutTestsInput";
import { AnswerUpdateManyWithoutTestsInput } from "./AnswerUpdateManyWithoutTestsInput";

@InputType()
class TestUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalMarks?: number | null;

  @ApiProperty({
    required: false,
    type: () => QuestionUpdateManyWithoutTestsInput,
  })
  @ValidateNested()
  @Type(() => QuestionUpdateManyWithoutTestsInput)
  @IsOptional()
  @Field(() => QuestionUpdateManyWithoutTestsInput, {
    nullable: true,
  })
  questions?: QuestionUpdateManyWithoutTestsInput;

  @ApiProperty({
    required: false,
    type: () => ScoreUpdateManyWithoutTestsInput,
  })
  @ValidateNested()
  @Type(() => ScoreUpdateManyWithoutTestsInput)
  @IsOptional()
  @Field(() => ScoreUpdateManyWithoutTestsInput, {
    nullable: true,
  })
  scores?: ScoreUpdateManyWithoutTestsInput;

  @ApiProperty({
    required: false,
    type: () => AnswerUpdateManyWithoutTestsInput,
  })
  @ValidateNested()
  @Type(() => AnswerUpdateManyWithoutTestsInput)
  @IsOptional()
  @Field(() => AnswerUpdateManyWithoutTestsInput, {
    nullable: true,
  })
  answers?: AnswerUpdateManyWithoutTestsInput;
}

export { TestUpdateInput as TestUpdateInput };
